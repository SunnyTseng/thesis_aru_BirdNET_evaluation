#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
## save the plot
ggsave(plot = level_patch_1,
## entering between S1, S2 and S3
filename = here("docs", "figures", "threshold_setting_S1.png"),
width = 34,
height = 18,
units = "cm",
dpi = 300)
## adjust the plot
level_patch <- S2 & # rotating between S1, S2 and S3
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL)
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
## save the plot
ggsave(plot = level_patch_1,
## entering between S1, S2 and S3
filename = here("docs", "figures", "threshold_setting_S2.png"),
width = 34,
height = 18,
units = "cm",
dpi = 300)
## adjust the plot
level_patch <- S3 & # rotating between S1, S2 and S3
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL)
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
## save the plot
ggsave(plot = level_patch_1,
## entering between S1, S2 and S3
filename = here("docs", "figures", "threshold_setting_S3.png"),
width = 34,
height = 18,
units = "cm",
dpi = 300)
S4
ggsave(plot = S4,
filename = here("docs", "figures", "threshold_setting_S4.png"),
width = 18,
height = 10,
units = "cm",
dpi = 300)
g1_list_1 <- rate_logistic_count %>%
group_nest(common_name, scientific_name) %>%
mutate(g1 = map2(.x = data,
.y = common_name,
.f =~ g1_plot_1(data = .x, species = .y)))
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL)
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
g1_list_1
level_patch <- (g1_list_1$g1[[5]] | g1_list_1$g1[[8]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL)
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
ggsave(plot = level_patch_1,
filename = here("docs", "figures", "threshold_setting.png"),
width = 24,
height = 18,
units = "cm",
dpi = 300)
rm(list = ls())
load(here("R", "complexity_metrics_1.rda"))
load(here("R", "table_final.rda"))
load(here("R", "rda_files", "complexity_metrics_1.rda"))
load(here("R", "rda_files", "table_final.rda"))
complexity_metrics
complexity_cor <- complexity_metrics %>%
left_join(table_final, by = join_by(common_name, scientific_name)) %>%
mutate(common_name = factor(common_name, levels = rev(table_final$common_name))) %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
## For duration
duration_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For bandwidth
bandwidth_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = bandwidth,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Bandwidth (kHz)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For inflections
inflections_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = inflections,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 17)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "No. of inflections") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
complexity_plot <- (duration_plot + bandwidth_plot + inflections_plot) +
#plot_annotation(tag_levels = "A") +
plot_layout(axes = "collect")
complexity_plot
rm(list = ls())
load(here("R", "complexity_metrics.rda"))
load(here("R", "rda_files", "complexity_metrics.rda"))
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
load(here("R", "rda_files", "complexity_metrics.rda"))
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
## For duration
duration_plot <- complexity_metrics %>%
ggplot(aes(x = reorder(common_name, bandwidth),
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For duration
duration_plot <- complexity_metrics %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name)) %>%
ggplot(aes(x = reorder(common_name, bandwidth),
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For bandwidth
bandwidth_plot <- complexity_metrics %>%
ggplot(aes(x = reorder(common_name, bandwidth),
y = bandwidth,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Bandwidth (kHz)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For inflections
inflections_plot <- complexity_metrics %>%
ggplot(aes(x = reorder(common_name, bandwidth),
y = inflections,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 17)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "No. of inflections") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
complexity_plot <- (duration_plot + bandwidth_plot + inflections_plot) +
#plot_annotation(tag_levels = "A") +
plot_layout(axes = "collect")
complexity_plot
load(here("R", "rda_files", "complexity_metrics_1.rda"))
load(here("R", "rda_files", "table_final.rda"))
complexity_cor <- complexity_metrics %>%
left_join(table_final, by = join_by(common_name, scientific_name)) %>%
mutate(common_name = factor(common_name, levels = rev(table_final$common_name))) %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
rm(list = ls())
load(here("R", "rda_files", "complexity_metrics_1.rda"))
load(here("R", "rda_files", "table_final.rda"))
complexity_cor <- complexity_metrics %>%
left_join(table_final, by = join_by(common_name, scientific_name)) %>%
mutate(common_name = factor(common_name, levels = rev(table_final$common_name))) %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
## For duration
duration_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
duration_plot
complexity_cor
View(complexity_cor)
complexity_cor <- complexity_metrics %>%
left_join(table_final, by = join_by(common_name, scientific_name)) %>%
mutate(common_name = factor(common_name, levels = rev(table_final$common_name))) %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name)) %>%
arrange(from_s)
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
## For duration
duration_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For bandwidth
bandwidth_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = bandwidth,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Bandwidth (kHz)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For inflections
inflections_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = inflections,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 17)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "No. of inflections") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
complexity_plot <- (duration_plot + bandwidth_plot + inflections_plot) +
#plot_annotation(tag_levels = "A") +
plot_layout(axes = "collect")
complexity_plot
rm(list = ls())
load(here("R", "rda_files", "complexity_metrics_1.rda"))
load(here("R", "rda_files", "table_final.rda"))
complexity_metrics_1 <- complexity_metrics %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
table_final_1 <- table_final %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
complexity_cor <- complexity_metrics %>%
left_join(table_final, by = join_by(common_name, scientific_name))  %>%
mutate(common_name = factor(common_name, levels = rev(table_final$common_name)))
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
## For duration
duration_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For bandwidth
bandwidth_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = bandwidth,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Bandwidth (kHz)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For inflections
inflections_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = inflections,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 17)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "No. of inflections") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
complexity_plot <- (duration_plot + bandwidth_plot + inflections_plot) +
#plot_annotation(tag_levels = "A") +
plot_layout(axes = "collect")
complexity_plot
rm(list = ls())
load(here("R", "rda_files", "complexity_metrics_1.rda"))
load(here("R", "rda_files", "table_final.rda"))
complexity_metrics_1 <- complexity_metrics %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
table_final_1 <- table_final %>%
mutate(common_name = if_else(common_name == "Yellow-rumped Warbler", "Myrtle Warbler", common_name),
common_name = if_else(common_name == "Pacific-slope Flycatcher", "Western Flycatcher", common_name))
complexity_cor <- complexity_metrics %>%
left_join(table_final, by = join_by(common_name, scientific_name))  %>%
mutate(common_name = factor(common_name, levels = rev(table_final$common_name)))
table_final$common_name
complexity_cor <- complexity_metrics_1 %>%
left_join(table_final_1, by = join_by(common_name, scientific_name))  %>%
mutate(common_name = factor(common_name, levels = rev(table_final_1$common_name)))
coul <- brewer.pal(12, "Paired")
coul <- colorRampPalette(coul)(19)
## For duration
duration_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = duration.x,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Duration (s)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For bandwidth
bandwidth_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = bandwidth,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 7)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "Bandwidth (kHz)") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
## For inflections
inflections_plot <- complexity_cor %>%
ggplot(aes(x = common_name,
y = inflections,
colour = common_name)) +
geom_boxplot(size = 1, alpha = 0.4) +
geom_jitter(colour = "slategrey", size = 1, alpha = 0.2) +
scale_colour_manual(values = coul) +
scale_y_continuous(limits = c(0, 17)) +
coord_flip() +
theme_bw() +
labs(x = NULL,
y = "No. of inflections") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 16),
axis.title.x = element_text(margin = margin(t = 5)),
legend.position = "none",
plot.margin = margin(0, 0.3, 0, 0.3, "cm"))
complexity_plot <- (duration_plot + bandwidth_plot + inflections_plot) +
#plot_annotation(tag_levels = "A") +
plot_layout(axes = "collect")
complexity_plot
ggsave(plot = complexity_plot,
filename = here("docs", "figures", "complexity_plot.png"),
width = 32,
height = 22,
units = "cm",
dpi = 300)
