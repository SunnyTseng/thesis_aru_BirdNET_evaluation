ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
g1
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
geom_point(aes(y = rate_cum*100, x = category_dbl)) +
geom_line(aes(y = rate_cum*100, x = category_dbl)) +
#geom_vline(xintercept = threshold, colour = "red", linetype = "dashed") +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
g1
threshold
threshold <- data %>%
filter(rate_loess > 0.90) %>%
slice_min(category_dbl) %>%
pull(from)
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
geom_point(aes(y = rate_cum*100, x = category_dbl)) +
geom_line(aes(y = rate_cum*100, x = category_dbl)) +
geom_vline(xintercept = threshold, colour = "red", linetype = "dashed") +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
g1
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
geom_point(aes(y = rate_cum*100, x = category_dbl)) +
geom_line(aes(y = rate_cum*100, x = category_dbl)) +
geom_vline(xintercept = threshold, colour = "red", linetype = "dashed", size = 2) +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
geom_point(aes(y = rate_cum*100, x = category_dbl)) +
geom_line(aes(y = rate_cum*100, x = category_dbl)) +
geom_vline(xintercept = threshold, colour = "red", linetype = "dashed", linewidth = 2) +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
g1
g1_plot_1 <- function(data, species){
coul <- brewer.pal(10, "Set3")
threshold <- data %>%
filter(rate_loess > 0.90) %>%
slice_min(category_dbl) %>%
pull(from)
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
geom_point(aes(y = rate_cum*100, x = category_dbl)) +
geom_line(aes(y = rate_cum*100, x = category_dbl)) +
geom_vline(xintercept = threshold, colour = "red", linetype = "dashed", linewidth = 2) +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
return(g1)
}
g1_list <- rate_loess_count %>%
group_nest(common_name, scientific_name) %>%
mutate(g1 = map2(.x = data, .y = common_name, .f =~ g1_plot_1(data = .x, species = .y)))
g1_list_1 <- rate_loess_count %>%
group_nest(common_name, scientific_name) %>%
mutate(g1 = map2(.x = data,
.y = common_name,
.f =~ g1_plot_1(data = .x, species = .y)))
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) +
plot_layout(guides = 'collect') &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98),
legend.position = "bottom") &
ylab(NULL) &
xlab(NULL)
gt <- patchwork::patchworkGrob(level_patch)
gridExtra::grid.arrange(gt,
right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
g1_plot_1 <- function(data, species){
coul <- brewer.pal(10, "Set3")
threshold <- data %>%
filter(rate_loess > 0.90) %>%
slice_min(category_dbl) %>%
pull(from)
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
geom_point(aes(y = rate_cum*100, x = category_dbl)) +
geom_line(aes(y = rate_cum*100, x = category_dbl)) +
geom_vline(xintercept = threshold, colour = "red", linetype = "dashed", linewidth = 1.2) +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
return(g1)
}
g1_list_1 <- rate_loess_count %>%
group_nest(common_name, scientific_name) %>%
mutate(g1 = map2(.x = data,
.y = common_name,
.f =~ g1_plot_1(data = .x, species = .y)))
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) +
plot_layout(guides = 'collect') &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98),
legend.position = "bottom") &
ylab(NULL) &
xlab(NULL)
gt <- patchwork::patchworkGrob(level_patch)
gridExtra::grid.arrange(gt,
right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
g1_plot_1 <- function(data, species){
coul <- brewer.pal(10, "Set3")
threshold <- data %>%
filter(rate_loess > 0.90) %>%
slice_min(category_dbl) %>%
pull(from)
g1 <- data %>%
pivot_longer(cols = c(TP_cum, FP_cum), names_to = "type") %>%
ggplot() +
geom_bar(aes(fill = type, y = value, x = category_dbl),
position = "stack",
stat = "identity") +
#geom_point(aes(y = rate_cum*100, x = category_dbl)) +
#geom_line(aes(y = rate_cum*100, x = category_dbl)) +
geom_vline(xintercept = threshold, colour = "red", linetype = "dashed", linewidth = 1.2) +
ggtitle(species) +
scale_fill_manual(values = coul[c(6, 1)],
labels = c("False Positive", "True Positive")) +
theme_bw() +
labs(x = "Confidence threshold",
y = "Remaining BirdNET detections (%)") +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 11),
legend.position = c(0.80, 0.80),
title = element_text(size = 14))
return(g1)
}
g1_list_1 <- rate_loess_count %>%
group_nest(common_name, scientific_name) %>%
mutate(g1 = map2(.x = data,
.y = common_name,
.f =~ g1_plot_1(data = .x, species = .y)))
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) +
plot_layout(guides = 'collect') &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98),
legend.position = "bottom") &
ylab(NULL) &
xlab(NULL)
gt <- patchwork::patchworkGrob(level_patch)
gridExtra::grid.arrange(gt,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) +
plot_layout(guides = 'collect') &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98),
legend.position = "bottom") &
ylab(NULL) &
xlab(NULL) %>%
patchworkGrob()
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(gt,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
level_patch_1
ggsave(plot = level_patch_1,
filename = here("docs", "figures", "threshold_setting_test.png"),
width = 24,
height = 18,
units = "cm",
dpi = 300)
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL) %>%
patchworkGrob()
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL) %>%
patchworkGrob()
level_patch <- (g1_list_1$g1[[19]] | g1_list_1$g1[[7]]) / (g1_list_1$g1[[2]] | g1_list_1$g1[[15]]) &
plot_annotation(tag_levels = 'A') &
theme(plot.margin = margin(5.5, 5.5, 5.5, 8),
plot.tag.position = c(0, 0.98)) &
ylab(NULL) &
xlab(NULL)
level_patch_1 <- patchwork::patchworkGrob(level_patch) %>%
gridExtra::grid.arrange(.,
#right = grid.text("Proportion of true positives (%)", rot = -90, gp = gpar(fontsize=18)),
left = grid.text("Remaining BirdNET detections (%)", rot = 90, gp = gpar(fontsize=18)),
bottom = grid.text("Confidence threshold", gp = gpar(fontsize=18)))
ggsave(plot = level_patch_1,
filename = here("docs", "figures", "threshold_setting_test.png"),
width = 24,
height = 18,
units = "cm",
dpi = 300)
ggsave(plot = level_patch_1,
filename = here("docs", "figures", "threshold_setting_1.png"),
width = 24,
height = 18,
units = "cm",
dpi = 300)
# library -----------------------------------------------------------------
library(tidyverse)
library(terra)
library(sf)
library(terra)
library(ggmap)
library(leaflet)
library(tidyterra)
library(ggspatial)
library(cowplot)
# load files --------------------------------------------------------------
grid_JPRF <- vect(here("data", "map", "JPRF Grid"))
grid_North <- vect(here("data", "map", "North Grid Jprf"))
rm(list = ls())
# load files --------------------------------------------------------------
grid_JPRF <- vect(here("data", "map", "JPRF Grid"))
grid_North <- vect(here("data", "map", "North Grid Jprf"))
test <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c(X, Y), crs = st_crs(4326))
test <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326))
test
test <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326))
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect()
sites
plot(sites)
plot(grid_JPRF)
plot(grid_North)
plot(grid_JPRF, col = "red", alpha = 0.5, add = TRUE)
plot(sites)
plot(grid_JPRF, col = "red", alpha = 0.5, add = TRUE)
plot(grid_JPRF, col = "red", alpha = 0.5, add = TRUE)
plot(grid_JPRF)
# load files --------------------------------------------------------------
grid_JPRF <- vect(here("data", "map", "JPRF Grid")) %>%
project()
grid_North <- vect(here("data", "map", "North Grid Jprf"))
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect() %>%
project(grid_JPRF)
# load files --------------------------------------------------------------
grid_JPRF <- vect(here("data", "map", "JPRF Grid"))
# load files --------------------------------------------------------------
grid_JPRF <- vect(here("data", "map", "JPRF Grid"))
grid_North <- vect(here("data", "map", "North Grid Jprf"))
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect() %>%
project(grid_JPRF)
plot(sites)
plot(grid_JPRF, col = "red", alpha = 0.5, add = TRUE)
plot(grid_JPRF)
plot(sites)
plot(grid_JPRF, col = "red", alpha = 0.5, add = TRUE)
plot(grid_North, col = "green", alpha = 0.2, add = TRUE)
plot(sites)
plot(grid_JPRF, col = "red", alpha = 0.2, add = TRUE)
plot(grid_North, col = "green", alpha = 0.2, add = TRUE)
# load files --------------------------------------------------------------
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect()
grid_JPRF <- vect(here("data", "map", "JPRF Grid")) %>%
project(sites)
grid_North <- vect(here("data", "map", "North Grid Jprf")) %>%
project(sites)
plot(sites)
plot(grid_JPRF, col = "red", alpha = 0.2, add = TRUE)
plot(grid_North, col = "green", alpha = 0.2, add = TRUE)
## get base map
aoi <- sites %>%
# add a buffer around the actual camera points
# so the the base map extends beyond them (in meters)
buffer(6000) %>%
# get the extent of this area (xmin, xmax, ymin, ymax)
ext()
aoi
basemap <- get_map(location = c(extent[[1]], extent[[3]],
extent[[2]], extent[[4]]),
maptype = "terrain", source = "stamen")
?extent
??extent
aoi
aoi[1]
extent <- as.vector(aoi)
extent[[1]]
extent[[1]] == aoi[1]
basemap <- get_map(location = c(aoi[[1]], aoi[[3]],
aoi[[2]], aoi[[4]]),
maptype = "terrain", source = "stamen")
?get_map
extent <- as.vector(aoi)
basemap <- get_map(location = c(extent[[1]], extent[[3]],
extent[[2]], extent[[4]]),
maptype = "terrain", source = "stamen")
?make_bbox
?ext
register_stadiamaps("483bb38f-7ba0-4c89-b2f5-fc8310057ab4", write = FALSE)
?register_stadiamaps
library(ggmap) ## for mapping
register_stadiamaps("483bb38f-7ba0-4c89-b2f5-fc8310057ab4", write = FALSE)
??register_stadiamaps
register_stadiamaps("483bb38f-7ba0-4c89-b2f5-fc8310057ab4", write = FALSE)
?register_stadiamaps
??register_stadiamaps
basemap <- get_stadiamap(location = c(extent[[1]], extent[[3]],
extent[[2]], extent[[4]]),
maptype = "stamen_terrain")
install.packages("ggmap")
# library -----------------------------------------------------------------
library(tidyverse)
# library -----------------------------------------------------------------
library(tidyverse)
library(terra) ## to read in data
library(sf) ## to read in csv and transfer to terra object
library(ggmap) ## for mapping
## site location, a total of 66 sites, in WGS84
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect()
library(here)
## site location, a total of 66 sites, in WGS84
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect()
## JPRF grid, reprojected to WGS84
grid_JPRF <- vect(here("data", "map", "JPRF Grid")) %>%
project(sites)
## North grid, reprojected to WGS84
grid_North <- vect(here("data", "map", "North Grid Jprf")) %>%
project(sites)
## get base map
aoi <- sites %>%
# add a buffer around the actual camera points
# so the the base map extends beyond them (in meters)
buffer(6000) %>%
# get the extent of this area (xmin, xmax, ymin, ymax)
ext()
extent <- as.vector(aoi)
register_stadiamaps("483bb38f-7ba0-4c89-b2f5-fc8310057ab4", write = FALSE)
basemap <- get_stadiamap(location = c(extent[[1]], extent[[3]],
extent[[2]], extent[[4]]),
maptype = "stamen_terrain")
library(ggmap) ## for mapping
library("ggmap")
get_stadiamap
?get_stadiamap
??get_stadiamap
install_github("dkahle/ggmap")
install.packages("devtools")
library(devtools)
install_github("dkahle/ggmap")
library(ggmap)
register_stadiamaps("483bb38f-7ba0-4c89-b2f5-fc8310057ab4", write = FALSE)
basemap <- get_stadiamap(location = c(extent[[1]], extent[[3]],
extent[[2]], extent[[4]]),
maptype = "stamen_terrain")
get_stadiamap()
# library -----------------------------------------------------------------
library(tidyverse)
library(here)
library(terra) ## to read in data
library(sf) ## to read in csv and transfer to terra object
library(ggmap) ## for mapping
## site location, a total of 66 sites, in WGS84
sites <- read_csv(here("data", "map", "JPRF_all_sites.csv")) %>%
st_as_sf(coords = c("X", "Y"), crs = st_crs(4326)) %>%
vect()
## JPRF grid, reprojected to WGS84
grid_JPRF <- vect(here("data", "map", "JPRF Grid")) %>%
project(sites)
## North grid, reprojected to WGS84
grid_North <- vect(here("data", "map", "North Grid Jprf")) %>%
project(sites)
## get base map
aoi <- sites %>%
# add a buffer around the actual camera points
# so the the base map extends beyond them (in meters)
buffer(6000) %>%
# get the extent of this area (xmin, xmax, ymin, ymax)
ext()
extent <- as.vector(aoi)
register_stadiamaps("483bb38f-7ba0-4c89-b2f5-fc8310057ab4", write = FALSE)
basemap <- get_stadiamap(location = c(extent[[1]], extent[[3]],
extent[[2]], extent[[4]]),
maptype = "stamen_terrain")
