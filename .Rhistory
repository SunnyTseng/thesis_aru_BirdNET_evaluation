axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Olive-sided Flycatcher",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
g_OSFL
g_OSFL <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#0072B2", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Olive-sided Flycatcher",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
g_OSFL
g_OSFL <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#999999", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Olive-sided Flycatcher",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
### YRWA
data <- read_csv(here("data",
"number_evaluation",
"Yellow_rumped Warbler_finished.csv"))
pro_1 <- proportion(data = data,
n_vector = c(5, 10, 25, 50),
bootstrap = 1)
g_OSFL <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#999999", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Olive-sided Flycatcher",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
### YRWA
data <- read_csv(here("data",
"number_evaluation",
"Yellow_rumped Warbler_finished.csv"))
pro_1 <- proportion(data = data,
n_vector = c(5, 10, 25, 50),
bootstrap = 1)
g_YRWA <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#999999", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Yellow-rumped Warbler",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
### OSFL
data <- read_csv(here("data",
#"number_evaluation",
"2020_Olive-sided Flycatcher_finished.csv"))
pro_1 <- proportion(data = data,
n_vector = c(5, 10, 25, 50),
bootstrap = 1)
g_OSFL <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#999999", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Olive-sided Flycatcher",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
### YRWA
data <- read_csv(here("data",
"number_evaluation",
"Yellow_rumped Warbler_finished.csv"))
pro_1 <- proportion(data = data,
n_vector = c(5, 10, 25, 50),
bootstrap = 1)
g_YRWA <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#999999", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Yellow-rumped Warbler",
x = NULL,
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
### VATH
data <- read_csv(here("data",
"number_evaluation",
"Varied Thrush_finished.csv"))
pro_1 <- proportion(data = data,
n_vector = c(5, 10, 25, 50),
bootstrap = 1)
g_VATH <- pro_1 %>%
mutate(num_recordings_f = as_factor(num_recordings)) %>%
ggplot(aes(x = category_dbl,
y = rate_mean,
colour = num_recordings_f,
group = num_recordings_f)) +
geom_point(aes(size = num_recordings),
alpha = 0.3,
shape = 20) +
geom_line(stat = "smooth", method = "loess",
se = FALSE, alpha = 0.5, size = 1.5) +
scale_color_manual(values = c("#999999", "#E7B800","#FC4E07", "#00AFFB")) +
scale_size(range = c(5, 25)) +
theme_bw() +
theme(legend.position = "none",
legend.justification = NULL,
legend.box.just = NULL,
axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0))) +
labs(title = "Varied Thrush",
x = "BirdNET confidence",
y = NULL,
colour = NULL,
size = NULL) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
#legend.position = c(0.8, 0.5),
legend.justification = c("left", "top"))
### legend
p_legend <- readPNG(here("docs", "figures", "number_evaluation_legend_1.PNG"),
native = TRUE)
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(5.5, 5.5, 5.5, 10),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(5, 5, 5, 10),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(5, 5, 5, 5),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(5, 5, 5, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(2, 5, 5, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(5, 5, 5, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(0, 5, 5, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(20, 5, 5, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(0, 5, 5, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(2, 2, 2, 8),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(2, 2, 2, 0),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# combine plot and add annotation
patch_plot <- (g_YRWA / g_OSFL / g_VATH) +
plot_annotation(tag_levels = "A") &
theme(plot.margin = margin(2, 2, 2, 5),
plot.tag = element_text(size = 14))
# add shared y axis
patch_plot_1 <- wrap_elements(patch_plot) +
labs(tag = "True positive rate") +
theme(plot.tag = element_text(size = rel(1.5), angle = 90),
plot.tag.position = "left")
patch_plot_1
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.83,
bottom = 0.6)
patch_plot_2
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation_1.png"),
width = 14,
height = 22,
units = "cm",
dpi = 300)
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation_1.png"),
width = 16,
height = 22,
units = "cm",
dpi = 300)
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation_1.png"),
width = 18,
height = 22,
units = "cm",
dpi = 300)
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation_1.png"),
width = 18,
height = 26,
units = "cm",
dpi = 300)
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation_1.png"),
width = 20,
height = 26,
units = "cm",
dpi = 300)
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.83,
bottom = 0.6)
patch_plot_2
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.9,
bottom = 0.6)
patch_plot_2
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.9,
bottom = 0.8)
patch_plot_2
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.87,
bottom = 0.78)
patch_plot_2
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.87,
bottom = 0.72)
patch_plot_2
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_2 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.87,
bottom = 0.72)
patch_plot_2
patch_plot_2
### legend
p_legend <- readPNG(here("docs", "figures", "number_evaluation_legend_2.PNG"),
native = TRUE)
# add a legend, saved as as an image
patch_plot_2 <- patch_plot_1 +
inset_element(p = p_legend,
left = 0.75,
right = 0.95,
top = 0.87,
bottom = 0.72)
patch_plot_2
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation_1.png"),
width = 20,
height = 26,
units = "cm",
dpi = 300)
# save the final plot
ggsave(plot = patch_plot_2,
filename = here("docs", "figures", "number_evaluation.png"),
width = 20,
height = 26,
units = "cm",
dpi = 300)
